class SQL
=========

The SQL class represents a condensed API for basic SQL queries
and data fetches. By internally using mysql_* or mysqli_*
based on the PHP version number, it allows for one set of API
to be used without worrying over deprecation and backsupport.

Moreover, the SQL class stores each and every connection that
is made, and allows for easy toggling between databases using
identification numbers.

Additionally, the SQL class provides the option of escaping the
input by using a boolean indicator, allowing for long-term
toggling between escaping and not escaping the input.
 
Static Variables
 
private handles -- Initialized as an empty array, used to store
  the handles of the SQL connections made.

private latest -- Initialized as null, records the index of
  the currently-active connection handle.

private escape -- Initialized as true, is the boolean
  indicator for whether to escape the input during querying.

private result -- Initialized as null, stores the result of
  the latest query, regardless of handle.
 
Functions
 
public static connect($host,$user,$passwd,$db)
  -- Establishes a connecion to $host, using username $user,
     with password $passwd, and selecting database $db and
     stores this connection in the handles array for use.
     Automatically sets latest to be the index of the new
     connection, and returns the connection established.

public static escape($escape=true)
  -- Sets the escape boolean indicator.

public static fetch($sqlresult=null)
  -- Uses *_fetch_array() to fetch the next result from the
     result resource. If the parameter is null, uses the static
     variable result instead. The fetched array is returned.

public static handle()
  -- Returns the currently selected handle; that is,
     handles[latest].

public static index()
  -- Returns the value of latest.

public static query($query,$args=array(),$escape=null)
  -- Uses $query as a formatted string to include the arguments
     provided in $args, which are escaped based on the $escape
     parameter. If $escape is null, uses the static variable
     escape instead. The result is stored in result and is
     returned.

public static result()
  -- Returns the latest result from a query.

public static select($id)
  -- Selects the database connection with identifier $id. A
     negative identifier indicates offset from the last handle,
     going backwards. Will throw an error if the identifier is
     out of bounds.

==========
NAVIGATION
==========
-[Home] Pjango Documentation (index.)
---[Installation] Installation Guide (index.)
---[Libraries] Built-in Libraries (index.)
-----[Including Library Files] Including Library Files
       (including.)
-----[Core] Core (index.)
-------[Core Functions] Core Functions (index.)
---------[AbstractComponent] abstract class AbstractComponent
           (AbstractComponent.)
---------[RootComponent] class RootComponent (RootComponent.)
---------[TagComponent] class TagComponent (TagComponent.)
---------[Token] class Token (Token.)
---------[TxtComponent] class TxtComponent (TxtComponent.)
---------[ValComponent] class ValComponent (ValComponent.)
---------[View] class View (View.)
-------[Site Settings] Site Settings (index.)
---------[__SITE Class and Object] class __SITE (__SITE.)
-------[Tags, Filters, and Middleware] Built-in Tags, Filters,
         and Middleware (index.)
---------[Filters] Filters (index.)
-----------[AbstractFilter] abstract class AbstractFilter
             (AbstractFilter.)
-----------[Built-in Filters] Built-in Filter Reference
             (builtins.)
-----------[Custom Filters] Custom Filters (customFilters.)
---------[Middleware] Middleware (index.)
-----------[AbstractMiddleware] abstract class
             AbstractMiddleware (AbstractMiddleware.)
-----------[Built-in Middleware] Built-in Middleware Reference
             (builtins.)
-----------[Custom Middleware] Custom Middleware
             (customMiddleware.)
---------[Tags] Tags (index.)
-----------[AbstractTag] abstract class AbstractTag
             (AbstractTag.)
-----------[Built-in Tags] Built-in Tag Reference (builtins.)
-----------[Custom Tags] Custom Tags (customTags.)
-----[SQL] SQL (index.)
======>[SQL Class] class SQL (SQL.)
-------[SQL Usage] Using SQL (usage.)
---[Writing Software] Development and Documentation (index.)
