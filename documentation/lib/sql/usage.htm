<!DOCTYPE html> <html> <head> <title>Pjango Documentation > Built-in Libraries > SQL > Using SQL</title> <link rel="stylesheet" type="text/css" href="/home/wqian94/Pjango/documentation/style.css" /> </head> <body> <div style="overflow:hidden;width:0;height:0;">&nbsp;</div> <div class="nav" style="position:fixed;z-index:100;width:251px;height:100%;overflow:auto;border-right:5px ridge black;"> <div class="desc" style="padding:1em 0 0 1em;"> <a href="../../index.htm" class="nav" title="Pjango Documentation">Home</a><ul><li><a href="../../installation/index.htm" class="nav" title="Installation Guide">Installation</a></li><li><a href="../../lib/index.htm" class="nav" title="Built-in Libraries">Libraries</a><ul><li><a href="../../lib/including.htm" class="nav" title="Including Library Files">Including Library Files</a></li><li><a href="../../lib/core/index.htm" class="nav" title="Core">Core</a></li><li><a href="../../lib/sql/index.htm" class="nav" title="SQL">SQL</a><ul><li><a href="../../lib/sql/SQL.htm" class="nav" title="class SQL">SQL Class</a></li><li><a href="../../lib/sql/usage.htm" class="nav highlight"" title="Using SQL">SQL Usage</a></li></ul></li></ul></li><li><a href="../../developing/index.htm" class="nav" title="Development and Documentation">Writing Software</a></li></ul> </div> </div> <div style="margin-left:256px;padding-left:5px;padding-right:1em;overflow:auto;"> <div> <h1>Using SQL</h1> <hr /> Each SQL database connection to be established should be listed in <span class="variable">settings.php</span> using the <span class="variable">$SQL_DATABASES</span> variable: <div class="example"><h4 class="struct">Example:</h4> <code class="block"> $SQL_DATABASES=array(<br /> &nbsp;&nbsp;array(<br /> &nbsp;&nbsp;&nbsp;&nbsp;"host"=>"hostname",<br /> &nbsp;&nbsp;&nbsp;&nbsp;"user"=>"username",<br /> &nbsp;&nbsp;&nbsp;&nbsp;"passwd"=>"password",<br /> &nbsp;&nbsp;&nbsp;&nbsp;"db"=>"databasename",<br /> &nbsp;&nbsp;&nbsp;&nbsp;),<br /> &nbsp;&nbsp;); </code> </div> They will then be connected in that order, with the last entry being the active one.<br /> <br /> To query, just call <span class="variable">SQL::query()</span>. The most basic query is just <span class="variable">SQL::query($querystring);</span>, which will send the input string as the query, raw; any string formatting characters will be left as-is (e.g. <code>%f</code> will be sent as <code>%f</code>).<br /> <br /> However, if an argument array with at least one element is provided (<span class="variable">SQL::query($querystring,$arguments);</span>), then the input string will be treated as a formatted string, and the arguments will be provided as formatting arguments using PHP's <span class="variable">vsprintf()</span> function.<br /> <br /> Each query can also have escaping turned on or off for just that query by passing in <span class="variable">true</span> as the third argument (to enable escaping), or <span class="variable">false</span> (to disable escaping).<br /> <br /> To retrieve each database match in array form, call <span class="variable">SQL::fetch()</span>. This will use fetch the next match from the result resource provided, or from the internally stored <span class="variable">result</span> static variable if the parameter is <span class="variable">null</span> or not provided.<br /> <br /> At any time, the current connection and query result can be retrieved using the <span class="variable">SQL::handle()</span> and <span class="variable">SQL::result()</span> functions, respectively. This allows for custom SQL calls, if needed. </div> </div> </body> </html>