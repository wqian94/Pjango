<!DOCTYPE html> <html> <head> <title>Pjango Documentation > Built-in Libraries > SQL > class SQL</title> <link rel="stylesheet" type="text/css" href="/home/wqian94/Pjango/documentation/style.css" /> </head> <body> <div style="overflow:hidden;width:0;height:0;">&nbsp;</div> <div class="nav" style="position:fixed;z-index:100;width:251px;height:100%;overflow:auto;border-right:5px ridge black;"> <div class="desc" style="padding:1em 0 0 1em;"> <a href="../../index.htm" class="nav" title="Pjango Documentation">Home</a><ul><li><a href="../../installation/index.htm" class="nav" title="Installation Guide">Installation</a></li><li><a href="../../lib/index.htm" class="nav" title="Built-in Libraries">Libraries</a><ul><li><a href="../../lib/including.htm" class="nav" title="Including Library Files">Including Library Files</a></li><li><a href="../../lib/core/index.htm" class="nav" title="Core">Core</a></li><li><a href="../../lib/sql/index.htm" class="nav" title="SQL">SQL</a><ul><li><a href="../../lib/sql/SQL.htm" class="nav highlight"" title="class SQL">SQL Class</a></li><li><a href="../../lib/sql/usage.htm" class="nav" title="Using SQL">SQL Usage</a></li></ul></li></ul></li><li><a href="../../developing/index.htm" class="nav" title="Development and Documentation">Writing Software</a></li></ul> </div> </div> <div style="margin-left:256px;padding-left:5px;padding-right:1em;overflow:auto;"> <div> <h1>class SQL</h1> <hr /> The SQL class represents a condensed API for basic SQL queries and data fetches. By internally using <span class="variable">mysql_*</span> or <span class="variable">mysqli_*</span> based on the PHP version number, it allows for one set of API to be used without worrying over deprecation and backsupport.<br /> <br /> Moreover, the SQL class stores each and every connection that is made, and allows for easy toggling between databases using identification numbers.<br /> <br /> Additionally, the SQL class provides the option of escaping the input by using a boolean indicator, allowing for long-term toggling between escaping and not escaping the input. <h3>Static Variables</h3> <span class="boldVariable">private handles</span> -- Initialized as an empty array, used to store the handles of the SQL connections made.<br /> <br /> <span class="boldVariable">private latest</span> -- Initialized as <span class="boldVariable">null</span>, records the index of the currently-active connection handle.<br /> <br /> <span class="boldVariable">private escape</span> -- Initialized as <span class="boldVariable">true</span>, is the boolean indicator for whether to escape the input during querying.<br /> <br /> <span class="boldVariable">private result</span> -- Initialized as <span class="boldVariable">null</span>, stores the result of the latest query, regardless of handle. <h3>Functions</h3> <span class="boldVariable">public static connect($host,$user,$passwd,$db)</span> -- Establishes a connecion to <span class="boldVariable">$host</span>, using username <span class="boldVariable">$user</span>, with password <span class="boldVariable">$passwd</span>, and selecting database <span class="boldVariable">$db</span> and stores this connection in the <span class="boldVariable">handles</span> array for use. Automatically sets <span class="boldVariable">latest</span> to be the index of the new connection, and returns the connection established.<br /> <br /> <span class="boldVariable">public static escape($escape=true)</span> -- Sets the <span class="boldVariable">escape</span> boolean indicator.<br /> <br /> <span class="boldVariable">public static fetch($sqlresult=null)</span> -- Uses <span class="boldVariable">*_fetch_array()</span> to fetch the next result from the result resource. If the parameter is <span class="boldVariable">null</span>, uses the static variable <span class="boldVariable">result</span> instead. The fetched array is returned.<br /> <br /> <span class="boldVariable">public static handle()</span> -- Returns the currently selected handle; that is, <span class="boldVariable">handles[latest]</span>.<br /> <br /> <span class="boldVariable">public static index()</span> -- Returns the value of <span class="boldVariable">latest</span>.<br /> <br /> <span class="boldVariable">public static query($query,$args=array(),$escape=null)</span> -- Uses <span class="boldVariable">$query</span> as a formatted string to include the arguments provided in <span class="boldVariable">$args</span>, which are escaped based on the <span class="boldVariable">$escape</span> parameter. If <span class="boldVariable">$escape</span> is <span class="boldVariable">null</span>, uses the static variable <span class="boldVariable">escape</span> instead. The result is stored in <span class="boldVariable">result</span> and is returned.<br /> <br /> <span class="boldVariable">public static result()</span> -- Returns the latest <span class="boldVariable">result</span> from a query.<br /> <br /> <span class="boldVariable">public static select($id)</span> -- Selects the database connection with identifier <span class="boldVariable">$id</span>. A negative identifier indicates offset from the last handle, going backwards. Will throw an error if the identifier is out of bounds. </div> </div> </body> </html>