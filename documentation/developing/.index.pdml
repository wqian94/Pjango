<<<TITLE
Development and Documentation
TITLE>>>

<<<SHORT
Writing Software
SHORT>>>

<<<CONTENT
<h2>Code and Documentation</h2>
Developing new software for Pjango, whether that be modules,
extensions, tags, filters, middleware, etc., has some basic
requirements.

First, all code should be written in a comprehensible manner.
Although you are not required to comment your code, comments
tend to help in understanding what your code does, as does
self-commenting code. This is true especially for code that you
expect to be modified later on.

Second, do your best to make your software object-oriented.
Most importantly, this means that you should define classes and
set up objective relationships between classes and subclasses,
instead of exposing everything to the global scope. This is
both a security measure and a good convention in collaborative
projects with independent modules.

Third, you are not expected to throw an error if your software
is misused. However, you may find it useful to do so, such that
bugs in your code can be more easily discovered and fixed. Of
course, you may create your own error classes and methods of
throwing errors.

Finally, make your documentation concise and obvious. From the
documentation, it should be clear how your software is to be
used. It may help to provide examples of syntax. Furthermore,
classes and variables should have short decriptions of their
purposes in your software, as well as their scope and whether
they are static or instance variables or functions. Also make
any notes about security loopholes, prerequisites, and any
additional precautions.
CONTENT>>>
