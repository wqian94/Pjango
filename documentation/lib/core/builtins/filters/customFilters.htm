<!DOCTYPE html> <html> <head> <title>Pjango Documentation > Built-in Libraries > Core > Built-in Tags, Filters, and Middleware > Filters > Custom Filters</title> <link rel="stylesheet" type="text/css" href="/home/wqian94/Pjango/documentation/style.css" /> </head> <body> <div style="overflow:hidden;width:0;height:0;">&nbsp;</div> <div class="nav" style="position:fixed;z-index:100;width:251px;height:100%;overflow:auto;border-right:5px ridge black;"> <div class="desc" style="padding:1em 0 0 1em;"> <a href="../../../../index.htm" class="nav" title="Pjango Documentation">Home</a><ul><li><a href="../../../../installation/index.htm" class="nav" title="Installation Guide">Installation</a></li><li><a href="../../../../lib/index.htm" class="nav" title="Built-in Libraries">Libraries</a><ul><li><a href="../../../../lib/including.htm" class="nav" title="Including Library Files">Including Library Files</a></li><li><a href="../../../../lib/core/index.htm" class="nav" title="Core">Core</a><ul><li><a href="../../../../lib/core/core/index.htm" class="nav" title="Core Functions">Core Functions</a></li><li><a href="../../../../lib/core/site/index.htm" class="nav" title="Site Settings">Site Settings</a></li><li><a href="../../../../lib/core/builtins/index.htm" class="nav" title="Built-in Tags, Filters, and Middleware">Tags, Filters, and Middleware</a><ul><li><a href="../../../../lib/core/builtins/filters/index.htm" class="nav" title="Filters">Filters</a><ul><li><a href="../../../../lib/core/builtins/filters/AbstractFilter.htm" class="nav" title="abstract class AbstractFilter">AbstractFilter</a></li><li><a href="../../../../lib/core/builtins/filters/builtins.htm" class="nav" title="Built-in Filter Reference">Built-in Filters</a></li><li><a href="../../../../lib/core/builtins/filters/customFilters.htm" class="nav highlight"" title="Custom Filters">Custom Filters</a></li></ul></li><li><a href="../../../../lib/core/builtins/middleware/index.htm" class="nav" title="Middleware">Middleware</a></li><li><a href="../../../../lib/core/builtins/tags/index.htm" class="nav" title="Tags">Tags</a></li></ul></li></ul></li><li><a href="../../../../lib/sql/index.htm" class="nav" title="SQL">SQL</a></li></ul></li><li><a href="../../../../developing/index.htm" class="nav" title="Development and Documentation">Writing Software</a></li></ul> </div> </div> <div style="margin-left:256px;padding-left:5px;padding-right:1em;overflow:auto;"> <div> <h1>Custom Filters</h1> <hr /> Although the built-in filters are sufficient for most puposes, you may find the need to develop your own filters. In fact, you are encouraged to implement additional filters to better suit your website.<br /> <br /> Creating a custom filter is very simple. Once the <span class="variable">core</span> sublibrary has been included in your PHP script (done at the top of <code>settings.php</code>), you can create a custom filter by extending the <span class="variable">AbstractFilter</span> class (documentation provided <a href="AbstractFilter.htm">here</a>) and defining the <span class="variable">render()</span> function.<br /> <br /> The <span class="variable">render()</span> function takes in three arguments: <span class="variable">$args</span>, <span class="variable">$var</span>, and <span class="variable">&$vars</span>.<br /> <br /> <span class="variable">$args</span> is an array of the arguments passed into your filter.<br /> <br /> <span class="variable">$var</span> is the value for your filter to manipulate; this could be anything from a simple string or number to an array or an instance of a class.<br /> <br /> <span class="variable">$vars</span> is the associative array of the current system variables at runtime. This is especially important for for-loops, as they update the current system variables with each iteration. Since it is passed by reference, be wary of mutating this variable.<br /> <br /> Additionally, your <span class="variable">render()</span> function can also return any value, including arrays and objects, though be advised that if no other filters are used to further process them, they will be converted to strings and printed as strings.<br /> <br /> Finally, you will need to register your filter with the <span class="variable">__SITE</span> class by using the <span class="variable">__SITE::addFilter($name,$instance)</span> function, where <span class="variable">$name</span> is the character string that will be the associated name of your filter, and <span class="variable">$instance</span> is an instance of the filter class that you just created.<br /> <br /> For example, the code for the <span class="variable">length</span> filter is reproduced below<br /> <br /> <code> 1 class __Filter_length extends AbstractFilter{<br /> 2 <span class="iblock" style="width:4em;"> </span>public static function render($args,$var,&$vars){<br /> 3 <span class="iblock" style="width:8em;"> </span>if(is_array($var))<br /> 4 <span class="iblock" style="width:12em;"> </span>return count($var);<br /> 5 <span class="iblock" style="width:8em;"> </span>return strlen($var);<br /> 6 <span class="iblock" style="width:4em;"> </span>}<br /> 7 }<br /> 8 __SITE::addFilter("length",new __Filter_length); </code><br /> <br /> Now, the custom filter can be used in a template. </div> </div> </body> </html>